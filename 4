#Basic Statistical testing

import pandas as pd
import numpy as np
from scipy import stats

df = pd.read_csv('grades.csv')
df.head()

early_finishers = df[pd.to_datetime(df['assignment1_submission']) < '2016']
early_finishers.head()

late_finishers = df[~df.index.isin(early_finishers.index)]
late_finishers.head()


print(early_finishers['assignment1_grade'].mean())
print(late_finishers['assignment1_grade'].mean())

#prueba t de rendimiento
from scipy.stats import ttest_ind

ttest_ind(early_finishers['assignment1_grade'], late_finishers['assignment1_grade'])

print(ttest_ind(early_finishers['assignment2_grade'], late_finishers['assignment2_grade']))
print(ttest_ind(early_finishers['assignment3_grade'], late_finishers['assignment3_grade']))
print(ttest_ind(early_finishers['assignment4_grade'], late_finishers['assignment4_grade']))
print(ttest_ind(early_finishers['assignment5_grade'], late_finishers['assignment5_grade']))
print(ttest_ind(early_finishers['assignment6_grade'], late_finishers['assignment6_grade']))

#Todos nuestros p valores son superiores al 0.05 no podemos rechazar la hipotesis nula que es que ambas poblaciones son iguales

df1 = pd.DataFrame([np.random.random(100) for x in range (100)])
df1.head()

df2 = pd.DataFrame([np.random.random(100) for x in range (100)])


#para saber si los dataframes son diferentes usamos la siguiente formula

#escribimos una funcion que se llame c
def test_columns(alpha=0.1):
    # y quiero saber en donde difiere
    num_diff=0
    #ahora iteramos sobre las columnas
    for col in df1.columns:
        # nosotros podemos correr nuestro ttest dentro de los dos dataframes
        teststat,pval=ttest_ind(df1[col],df2[col])
        #y checamos el pvalor contra el alpha
        if pval <= alpha:
            #y ahora nosotros imprimiremos si son diferentes y el incremento de num_diff
            print('Col {} is statistically significantly different at alpha = {}, pval{}'.format(col, alpha, pval))
            num_diff = num_diff + 1
        #y vamos a imprimir los stats del indice
        print('Total number different was {}, which is {}%'.format(num_diff, float(num_diff)/len(df1.columns)*100))
    
#y ahora corremos este codigo
test_columns()
        
test_columns(0.05)

df2 = pd.DataFrame([np.random.chisquare(df=1,size=100) for x in range (100)])
